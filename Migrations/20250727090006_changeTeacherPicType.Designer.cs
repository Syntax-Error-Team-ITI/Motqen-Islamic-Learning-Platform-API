// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotqenIslamicLearningPlatform_API.Models;

#nullable disable

namespace MotqenIslamicLearningPlatform_API.Migrations
{
    [DbContext(typeof(MotqenDbContext))]
    [Migration("20250727090006_changeTeacherPicType")]
    partial class changeTeacherPicType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.ClassSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("HalaqaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("HalaqaId");

                    b.ToTable("ClassSchedules");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderGroup")
                        .HasColumnType("int");

                    b.Property<string>("GuestLiveLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostLiveLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Halaqas");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.HalaqaStudent", b =>
                {
                    b.Property<int>("HalaqaId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.HasKey("HalaqaId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("HalaqaStudent");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.HalaqaTeacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("HalaqaId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId", "HalaqaId");

                    b.HasIndex("HalaqaId");

                    b.ToTable("HalaqaTeacher");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.ParentModel.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.Shared.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.Shared.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.IslamicSubjectsProgressTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FromPage")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgressTrackingId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToPage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgressTrackingId")
                        .IsUnique()
                        .HasFilter("[ProgressTrackingId] IS NOT NULL");

                    b.ToTable("IslamicSubjectsProgressTrackings");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.ProgressTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Evaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HalaqaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HalaqaId");

                    b.HasIndex("StudentId");

                    b.ToTable("ProgressTrackings");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.QuranProgressTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FromAyah")
                        .HasColumnType("int");

                    b.Property<int>("FromSurah")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfLines")
                        .HasColumnType("int");

                    b.Property<int?>("ProgressTrackingId")
                        .HasColumnType("int");

                    b.Property<int>("ToAyah")
                        .HasColumnType("int");

                    b.Property<int>("ToSurah")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgressTrackingId")
                        .IsUnique()
                        .HasFilter("[ProgressTrackingId] IS NOT NULL");

                    b.ToTable("QuranProgressTrackings");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ParentNationalId")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.StudentAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HalaqaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HalaqaId");

                    b.HasIndex("StudentId", "HalaqaId", "AttendanceDate")
                        .IsUnique();

                    b.ToTable("StudentAttendances");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.TeacherModel.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.TeacherModel.TeacherAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HalaqaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HalaqaId");

                    b.HasIndex("TeacherId", "HalaqaId", "AttendanceDate")
                        .IsUnique();

                    b.ToTable("TeacherAttendances");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.TeacherModel.TeacherSubject", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.ClassSchedule", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", "Halaqa")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("HalaqaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Halaqa");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.Subject", "Subject")
                        .WithMany("HalaqaSubjects")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.HalaqaStudent", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", "Halaqa")
                        .WithMany("HalaqaStudents")
                        .HasForeignKey("HalaqaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", "Student")
                        .WithMany("HalaqaStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Halaqa");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.HalaqaTeacher", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", "Halaqa")
                        .WithMany("HalaqaTeachers")
                        .HasForeignKey("HalaqaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.TeacherModel.Teacher", "Teacher")
                        .WithMany("HalaqaTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Halaqa");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.ParentModel.Parent", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.User", "User")
                        .WithOne("Parent")
                        .HasForeignKey("MotqenIslamicLearningPlatform_API.Models.ParentModel.Parent", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.IslamicSubjectsProgressTracking", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.StudentModel.ProgressTracking", "ProgressTracking")
                        .WithOne("IslamicSubjectsProgressTrackingDetail")
                        .HasForeignKey("MotqenIslamicLearningPlatform_API.Models.StudentModel.IslamicSubjectsProgressTracking", "ProgressTrackingId");

                    b.Navigation("ProgressTracking");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.ProgressTracking", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", "Halaqa")
                        .WithMany("ProgressTrackings")
                        .HasForeignKey("HalaqaId");

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", "Student")
                        .WithMany("ProgressTrackings")
                        .HasForeignKey("StudentId");

                    b.Navigation("Halaqa");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.QuranProgressTracking", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.StudentModel.ProgressTracking", "ProgressTracking")
                        .WithOne("QuranProgressTrackingDetail")
                        .HasForeignKey("MotqenIslamicLearningPlatform_API.Models.StudentModel.QuranProgressTracking", "ProgressTrackingId");

                    b.Navigation("ProgressTracking");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.ParentModel.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId");

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", "UserId");

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.StudentAttendance", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", "Halaqa")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("HalaqaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", "Student")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Halaqa");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.StudentSubject", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.TeacherModel.Teacher", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("MotqenIslamicLearningPlatform_API.Models.TeacherModel.Teacher", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.TeacherModel.TeacherAttendance", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", "Halaqa")
                        .WithMany("TeacherAttendances")
                        .HasForeignKey("HalaqaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.TeacherModel.Teacher", "Teacher")
                        .WithMany("TeacherAttendances")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Halaqa");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.TeacherModel.TeacherSubject", b =>
                {
                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.Shared.Subject", "Subject")
                        .WithMany("SubjectTeachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotqenIslamicLearningPlatform_API.Models.TeacherModel.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.HalaqaModel.Halaqa", b =>
                {
                    b.Navigation("ClassSchedules");

                    b.Navigation("HalaqaStudents");

                    b.Navigation("HalaqaTeachers");

                    b.Navigation("ProgressTrackings");

                    b.Navigation("StudentAttendances");

                    b.Navigation("TeacherAttendances");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.ParentModel.Parent", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.Shared.Subject", b =>
                {
                    b.Navigation("HalaqaSubjects");

                    b.Navigation("StudentSubjects");

                    b.Navigation("SubjectTeachers");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.Shared.User", b =>
                {
                    b.Navigation("Parent");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.ProgressTracking", b =>
                {
                    b.Navigation("IslamicSubjectsProgressTrackingDetail");

                    b.Navigation("QuranProgressTrackingDetail");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.StudentModel.Student", b =>
                {
                    b.Navigation("HalaqaStudents");

                    b.Navigation("ProgressTrackings");

                    b.Navigation("StudentAttendances");

                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("MotqenIslamicLearningPlatform_API.Models.TeacherModel.Teacher", b =>
                {
                    b.Navigation("HalaqaTeachers");

                    b.Navigation("TeacherAttendances");

                    b.Navigation("TeacherSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
